------------------------------------------------

API (for front end people)

-----------------------------------SPRINT 2--------------------------------------------------------------

------------User / Vet Profile Management-------------------------


IP:PORT = http://115.146.86.193:8080

1. Profile Post Example


    This is an api for during REGISTER ONLY!
    Initialization of the user in the database

    Input:
            URL: http://ServerIP:Port/postProfile

            Parameters (Case-sensitive)

            ALL REQUIRED ( WILL RETURN ERROR IF NOT)

              1. token (NOT YET IMPLEMENTED. Ignore for now.)
              2. userid
              3. firstname
              4. lastname
              5. dob
              6. userType
              7. streetnumber
              8. streetname
              9. suburb
              10.state
              11.postcode
              12.country

//////////////////OLD PARAM////////////////////////////////
            Example Parameters :
            userid=Tester2&firstName=Stanley&lastName=Sim&dob=20/11/1932&userType=User&streetNumber=199&streetName=Lygon St&suburb=Carlton&state=Victoria&postcode=3053&country=Australia
///////////////NEW PARAM//////////////////////////////////

	New Param : 
	token=ASREAWUHFKUAWHUAHWKDHAWKU
	Body:
	JSON Containing field 2-12 in String. Remember to Stringify the JSON (Server only accept JSON in String) 

    Output:
    return : {"response":"success","id":"Tester2","errorMessage":null}
    or
    return : {"response": "error", "id" :"Tester2","errorMessage":"Potato Server"}

3. Profile Update 

    Input:
            URL: http://ServerIP:Port/profileUpdate
            Parameters(case-sensitive)

            


    PARAM : token=ASEAFSDADAWAWCWACAWFWASD

	token is required


    Body  : JSON String

	ALL Body Parameters IS OPTIONAL EXCEPT FOR userid (same param as profile registering)
            Cant change userType !! will throw an error if the optionally given userType is different than the stored userType
            Exception: When 1 of the data field regarding the address is changed (streetnumber,....,country) send all the data regarding user address(all of streetnumber,...,country) to the Server
            or you will get an error

    
    Output: 
            return : {"response":"success","id":"Tester2","errorMessage":null}
            return : {"response": "error", "id" :"Tester2","errorMessage":"Potato Server"}

    

4. Image Upload

5. Insert Pet
    
    This is an api for adding a new pet!
    Initialization of the pet in the database to a particular user

    Input:
            URL: http://ServerIP:Port/postPetProfile

            Parameters (Case-sensitive)

            ALL REQUIRED ( WILL RETURN ERROR IF NOT)

              1. token (NOT YET IMPLEMENTED. Ignore for now.)
              2. petId
              3. userId
              4. petname
              5. dob
              6. animalType
              7. breed
            Example Parameters :
            petId=Pet1&userId=FdsZPv4cydYUN9CVFb3WZbJb3Rr1&petname=Fluffy&dob=10/11/2010&animalType=Dog&breed=Dalmation
    
    Output:
    {"response":"success","id":"Pet1","errorMessage":null}

6. Update Pet
        Input:
            URL: http://ServerIP:Port/petProfileUpdate
            Parameters(case-sensitive)
            1. token (NOT YET IMPLEMENTED. Ignore for now.)
            2. petId
            3. petname
            4. dob
            5. animalType
            6. breed
            ALL Parameters are OPTIONAL EXCEPT FOR petId, token (when it is implemented).
            petId is for identification only and is not part of the update
            Example Parameters :
            petId=Pet1&petname=Snoopy&dob=&animalType=&breed=

        Output: 
            return : {"response":"success","id":"Tester2","errorMessage":null}
            
7. Delete Pet
        Input:
            URL: http://ServerIP:Port/petProfileDelete/petId
            Parameters(case-sensitive)
            No parameters as Deleting can only take ID
            
        Output:
            {"response":"success","id":"Pet2","errorMessage":null}
        If the petID entered, does not exist then the same response is sent but no Pet is Deleted
-----------User Auth-----------------


1. Get Custom Auth (Admin auth)

----------------Booking---------------

1. Get nearest Vet
2. Payment
3. Make a booking
4. Cancel Booking
5. Insert availability
6. Delete availability


----------------------------------------------SPRINT 3-------------------------------------------------------------


-----------------Store-----------------

